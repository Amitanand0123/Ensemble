name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci-cd.yml'

jobs:
  lint_test_build:
    name: Lint, Test & Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        run: npm ci --prefix frontend

      - name: Lint Frontend Code
        run: npm run lint --prefix frontend || echo "Lint step failed/skipped"

      - name: Run Frontend Tests
        run: npm run test --prefix frontend || echo "Test step failed/skipped"


      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        id: build-push 
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: frontend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          
          build-args: |
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL_PROD }}
            VITE_RAZORPAY_KEY_ID=${{ secrets.VITE_RAZORPAY_KEY_ID_PROD }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/ensemble-frontend:latest
            ghcr.io/${{ github.repository_owner }}/ensemble-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy Frontend
    needs: lint_test_build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Trigger Render Deploy (Frontend)
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL_FRONTEND }}
        